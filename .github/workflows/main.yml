name: CI/CD Pipeline

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Test Python Application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install development dependencies if they exist
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Run Python application
      run: |
        python hello_world.py
        
    - name: Run linting (if available)
      run: |
        # Add linting commands here when needed
        echo "Linting step - add flake8 or black when needed"
        
    - name: Run tests (if available)
      run: |
        # Add test commands here when needed
        echo "Test step - add pytest when tests are available"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create build artifact
      run: |
        mkdir -p dist
        cp hello_world.py dist/
        cp requirements.txt dist/
        tar -czf hello-world-app.tar.gz dist/
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: hello-world-app
        path: hello-world-app.tar.gz
        retention-days: 30

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: hello-world-app
        
    - name: Deploy to staging (simulation)
      run: |
        echo "Deploying to staging environment..."
        echo "This is where you would deploy to GCP:"
        echo "- Cloud Run"
        echo "- App Engine"
        echo "- Compute Engine"
        echo "- Kubernetes Engine"
        
    - name: Health check
      run: |
        echo "Running health checks on staging deployment..."
        echo "Application health: OK"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: hello-world-app
        
    - name: Deploy to production (simulation)
      run: |
        echo "Deploying to production environment..."
        echo "Production deployment completed successfully!"
        
    - name: Post-deployment verification
      run: |
        echo "Running post-deployment verification..."
        echo "All systems operational!"
